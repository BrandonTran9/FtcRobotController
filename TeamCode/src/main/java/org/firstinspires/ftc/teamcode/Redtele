package org.firstinspires.ftc.teamcode;

import static java.lang.Thread.sleep;

import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.CRServo;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.hardware.Servo;

@TeleOp
public class RedTele extends OpMode {
    DcMotor lift1, FR, FL, BL, BR,lift2;
    CRServo SL, SR;
    Servo Srotate1, Srotate2,slide1,slide2,claw;

    @Override
    public void init() {
        BR = hardwareMap.dcMotor.get("BR");
        BL = hardwareMap.dcMotor.get("BL");
        FR = hardwareMap.dcMotor.get("FR");
        FL = hardwareMap.dcMotor.get("FL");
        lift2 = hardwareMap.dcMotor.get("lift2");
        lift1 = hardwareMap.dcMotor.get("lift1");
        SL = hardwareMap.crservo.get("SL");
        SR = hardwareMap.crservo.get("SR");
        Srotate1 = hardwareMap.servo.get("Srotate1");
        Srotate2 = hardwareMap.servo.get("Srotate2");
        slide1 = hardwareMap.servo.get("slide1");
        slide2 = hardwareMap.servo.get("slide2");
        claw = hardwareMap.servo.get("claw");
        
        FR.setDirection(DcMotor.Direction.REVERSE);
        FL.setDirection(DcMotor.Direction.FORWARD);
        BR.setDirection(DcMotor.Direction.REVERSE);
        BL.setDirection(DcMotor.Direction.FORWARD);
        lift2.setDirection(DcMotor.Direction.FORWARD);
        lift1.setDirection(DcMotor.Direction.FORWARD);
        SL.setDirection(DcMotor.Direction.FORWARD);
        SR.setDirection(DcMotor.Direction.FORWARD);
    }

    @Override
    public void loop() {
        //Base movements
        if (Math.abs(gamepad1.right_stick_y) > .2) {
            FR.setPower(gamepad1.right_stick_y * 1);
            BR.setPower(gamepad1.right_stick_y * 1);
        } else {
            BR.setPower(0);
            FR.setPower(0);
        }
        if (Math.abs(gamepad1.left_stick_y) > .2) {
            FL.setPower(gamepad1.left_stick_y * 1);
            BL.setPower(gamepad1.left_stick_y * 1);
        } else {
            FL.setPower(0);
            BL.setPower(0);
        }
        if (gamepad1.right_bumper) {
            FR.setPower(-1);
            BR.setPower(-1);
            BL.setPower(1);
            FL.setPower(1);
        } else {
            FR.setPower(0);
            BR.setPower(0);
            BL.setPower(0);
            FL.setPower(0);
        }
        if (gamepad1.left_bumper) {
            FR.setPower(1);
            BR.setPower(1);
            BL.setPower(-1);
            FL.setPower(-1);
        } else {
            FR.setPower(0);
            BR.setPower(0);
            BL.setPower(0);
            FL.setPower(0);
        }
        // lifts
        if (Math.abs(gamepad2.left_stick_y) > .2) {
            lift1.setPower(gamepad2.left_stick_y *1);
            lift2.setPower(gamepad2.left_stick_y *1);;
        } else {
            lift1.setPower(0);
            lift1.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
            lift2.setPower(0);
            lift2.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        }
        //intakes
        if (gamepad2.a) {
            slide1.setPosition(.45);
            slide2.setPosition(.5); // opposite of 1 and .1 off

            SR.setPower(1);
            SL.setPower(-1);
        }
        if (gamepad2.y) {
            slide1.setPosition(0);
            slide2.setPosition(1);
            SR.setPower(00);
            SL.setPower(0);
        }
        if (gamepad2.x) {
            claw.setPosition(.25);
        }
        if (gamepad2.b) {
            claw.setPosition(0);
        }
    }
}
